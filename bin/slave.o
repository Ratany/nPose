// The nPose scripts are licensed under the GPLv2
// (http://www.gnu.org/licenses/gpl-2.0.txt), with the following
// addendum:
//
// The nPose scripts are free to be copied, modified, and
// redistributed, subject to the following conditions:
//
//    - If you distribute the nPose scripts, you must leave them full
//      perms.
//
//    - If you modify the nPose scripts and distribute the
//      modifications, you must also make your modifications full
//      perms.
//
// "Full perms" means having the modify, copy, and transfer
// permissions enabled in Second Life and/or other virtual world
// platforms derived from Second Life (such as OpenSim).  If the
// platform should allow more fine-grained permissions, then "full
// perms" will mean the most permissive possible set of permissions
// allowed by the platform.
// =repo-npose/slave.o
// compiled Tue Jan 28 10:59:09 2014 UTC
integer vAA;string vAB;list vAC;list vAD;integer vAE=0;integer vAF=0;integer vAG=206;integer vAH=0;integer vAI=208;integer vAJ=209;integer vAK;integer vAL;integer vAM;string vAN;integer vAO;integer vAP;integer vAQ=20;list vAR;integer vAS=8;integer vAT=35353;integer vAU=34334;list vAV=[];integer vAW=-218;list vAX;list vAY=[];list vAZ;key vBA;integer vEP;integer vBC=-222;string vBD="on";doSeats(integer vBE,key vBF){if(vAH!=1){vector vBG=vBW(vBE);MoveLinkedAv(vBM(vBF),vBG,llList2Rot(vAZ,((vBE)*8)+2));}if(vBF!=""){vAE=0;vEP=llGetListLength(vAZ)/8;llRequestPermissions(vBF,PERMISSION_TRIGGER_ANIMATION);}}list vBH(){list vBI;integer vBO=llGetNumberOfPrims();integer vEO;for(vEO=vBO;vEO>=0;vEO--){key vEK=llGetLinkKey(vEO);if(llGetAgentSize(vEK)!=ZERO_VECTOR){vBI=[vEK]+vBI;}else{return vBI;}}return[];}integer vBM(key vEB){integer vBO=llGetNumberOfPrims();while(vEB!=llGetLinkKey(vBO)){if(llGetAgentSize(llGetLinkKey(vBO))==ZERO_VECTOR){return-1;}vBO--;}return vBO;}MoveLinkedAv(integer vBP,vector vBQ,rotation vBR){key vBS=llGetLinkKey(vBP);if(vBS){vector vBT=llGetAgentSize(vBS);if(vBT){rotation vBU=ZERO_ROTATION;vector vBV=ZERO_VECTOR;if(llGetLinkNumber()>1){vBU=llGetLocalRot();vBV=llGetLocalPos();}vBQ.z+=0.4;llSetLinkPrimitiveParamsFast(vBP,[PRIM_POSITION,((vBQ-(llRot2Up(vBR)*vBT.z*0.02638))*vBU)+vBV,PRIM_ROTATION,vBR*vBU/llGetRootRotation()]);}}}vector vBW(integer vEO){string vBY=llList2String(vAZ,vEO*vAS+4);integer vBZ=llListFindList(vAR,[(key)vBY]);rotation vCJ=llList2Rot(vAZ,vEO*vAS+2);vector vCI=(vector)llList2String(vAZ,vEO*vAS+1);if(vBZ!=-1){vector vCE=llList2Vector(vAR,vBZ+1);vCI+=vCE*vCJ;}return vCI;}SetAvatarOffset(key vCD,vector vCE){integer vCF=llListFindList(vAR,[vCD]);if(vCE==ZERO_VECTOR){vAR=llListReplaceList(vAR,[vCD,vCE],vCF,vCF+1);}if(vCF<0){vCF=vAP;vAP=(vAP+2)% vAQ;}else{vCE=llList2Vector(vAR,vCF+1)+vCE;}vAR=llListReplaceList(vAR,[vCD,vCE],vCF,vCF+1);}RezNextAdjuster(){llRezObject("Adjuster",llGetPos()+<0,0,1>,ZERO_VECTOR,llGetRot(),vAA);}ChatAdjusterPos(integer vCG){integer vEQ=vCG*vAS;vector vCI=llGetPos()+llList2Vector(vAZ,vEQ+1)*llGetRot();rotation vCJ=llList2Rot(vAZ,vEQ+2)*llGetRot();string vCK=llList2String(vAV,vCG)+"|posrot|"+(string)vCI+"|"+(string)vCJ;llRegionSay(vAA,vCK);}default{state_entry(){llMessageLinked(LINK_SET,999999,"","");vAL=llGetNumberOfPrims();vAM=vAL;}link_message(integer vCL,integer vCM,string vCN,key vEK){if(vCM==1){vAA=(integer)vCN;}if(vCM==vAW){key vEB;list vCQ=llParseString2List(vCN,["/"],[]);if(llListFindList(vBH(),[(key)llList2String(vCQ,0)])!=-1){vEB=(key)llList2String(vCQ,0);}if(vEB){llRequestPermissions(vEB,PERMISSION_TRIGGER_ANIMATION);vEB=llGetPermissionsKey();list vCR=llParseString2List(llList2String(vCQ,1),["~"],[]);integer vCS;integer vCT=llGetListLength(vCR);for(vCS=0;vCS<vCT;++vCS){vCQ=llParseString2List(llList2String(vCR,vCS),[","],[]);if(llList2String(vCQ,0)=="stopAll"){vAX=[vEB,llList2String(vCQ,0),llList2String(vCQ,1)]+vAX;}else{integer vEQ=llListFindList(vAX,[llList2String(vCQ,1)]);if(vEQ>=1&(key)llList2String(vAX,vEQ-2)==vEB){vAX=llDeleteSubList(vAX,vEQ-2,vEQ);}vAX+=[vEB,llList2String(vCQ,0),llList2String(vCQ,1)];}}integer vEO;vCT=llGetListLength(vAX)/3;for(vEO=0;vEO<vCT;++vEO){if((key)llList2String(vAX,vEO*3)==vEB){if(llList2String(vAX,vEO*3+1)=="stopAll"){vAX=llDeleteSubList(vAX,vEO*3,vEO*3+2);vEO-=1;vCT-=1;integer vEH;integer vCX=llGetListLength(vAX)/3;if(vCX>0){for(vEH=0;vEH<vCX;++vEH){if((key)llList2String(vAX,vEH*3)==vEB&&llList2String(vAX,vEH*3+2)!=""){llStopAnimation(llList2String(vAX,vEH*3+2));vAX=llDeleteSubList(vAX,vEH*3,vEH*3+2);vEH-=1;vCX-=1;}}}}else if(llList2String(vAX,vEO*3+1)=="start"&&llList2String(vAX,vEO*3)==vEB&&llList2String(vAX,vEO*3+2)!=""){if(llGetPermissions()&PERMISSION_TRIGGER_ANIMATION){llStartAnimation(llList2String(vAX,vEO*3+2));}}else if(llList2String(vAX,vEO*3+1)=="stop"){if(llGetPermissions()&PERMISSION_TRIGGER_ANIMATION){llStopAnimation(llList2String(vAX,vEO*3+2));vAX=llDeleteSubList(vAX,vEO*3,vEO*3+2);vEO-=1;vCT-=1;}}}}}}else if(vCM==vAI){SetAvatarOffset(vEK,(vector)vCN);llMessageLinked(LINK_SET,vAT,llDumpList2String(vAZ,"^"),NULL_KEY);}else if(vCM==vAJ){SetAvatarOffset(vEK,(vector)vCN);llMessageLinked(LINK_SET,vAT,llDumpList2String(vAZ,"^"),NULL_KEY);}else if(vCM==-241){vBD=vCN;}else if(vCM==vAT){list vCY=llParseStringKeepNulls(vCN,["^"],[]);integer vEP=llGetListLength(vCY)/8;vAZ=[];vAY=[];vAF=0;string vDA="";string vDF="";for(vAO=1;vAO<=vEP;++vAO){integer vDC=(integer)llGetSubString(llList2String(vCY,(vAO-1)*8+7),4,-1);vAZ=vAZ+[llList2String(vCY,(vAO-1)*8),(vector)llList2String(vCY,(vAO-1)*8+1),(rotation)llList2String(vCY,(vAO-1)*8+2),llList2String(vCY,(vAO-1)*8+3),(key)llList2String(vCY,(vAO-1)*8+4),llList2String(vCY,(vAO-1)*8+5),llList2String(vCY,(vAO-1)*8+6),llList2String(vCY,(vAO-1)*8+7)];if(llList2String(vAZ,(vAO-1)*8+4)!=""){vDA+=llGetSubString(llKey2Name((key)llList2String(vCY,(vAO-1)*8+4)),0,20)+",";}else{vDA+=llList2String(vCY,(vAO-1)*8+7)+",";}if(llList2String(vCY,(vAO-1)*8+3)!=""){list vDD=llParseString2List(llList2String(vCY,(vAO-1)*8+3),["~"],[]);integer vEC=llGetListLength(vDD);list vDF=[];integer vDG;integer vDH=0;for(vDG=0;vDG<vEC;++vDG){list vDI=llParseString2List(llList2String(vDD,vDG),["="],[]);if(llList2String(vDI,1)){vDF+=[llList2String(vDI,0),(integer)llList2String(vDI,1)];vDH=1;}else{vDF+=[llList2String(vDI,0),-1];}}vAF=1;vAY+=[(key)llList2String(vCY,(vAO-1)*8+4),vDH,vEC]+vDF;}}llMessageLinked(LINK_SET,vAT+1,vDA,NULL_KEY);vDA="";for(vAO=0;vAO<vEP;++vAO){if(llList2Key(vAZ,vAO*8+4)!=""){if(llListFindList(vBH(),[llList2Key(vAZ,vAO*8+4)])!=-1){vAH=0;doSeats(vAO,llList2String(vAZ,(vAO)*8+4));return;}}}}else if(vCM==vBC){llUnSit((key)vCN);}else if(vCM==vAG){vAH=1;integer vEP=llGetListLength(vAZ)/8;for(vAO=0;vAO<vEP;++vAO){doSeats(vAO,llList2String(vAZ,(vAO)*8+4));return;}}else if(vCM==201){llSay(vAA,"adjuster_die");vAV=[];if(llGetInventoryType("Adjuster")&INVENTORY_OBJECT){RezNextAdjuster();}else{llRegionSayTo(llGetOwner(),0,"Seat Adjustment disabled.  No Adjuster object found in"+llGetObjectName()+".");}}else if(vCM==205){llMessageLinked(LINK_SET,204,"","");llSay(vAA,"adjuster_die");vAV=[];}else if(vCM==2&&vCN=="RezAdjuster"){vAV=[];RezNextAdjuster();}else if(vCM==3){integer vEQ=llListFindList(vAV,[vEK]);if(vEQ!=-1){string vDR=llGetObjectName();llSetObjectName(llGetLinkName(1));list vDM=llParseString2List(vCN,["|"],[]);vector vDN=(vector)llList2String(vDM,0)-llGetPos();vDN=vDN/llGetRot();integer vDO=vEQ*vAS;rotation vDP=(rotation)llList2String(vDM,1)/llGetRot();vAZ=llListReplaceList(vAZ,[vDN,vDP],vDO+1,vDO+2);llRegionSayTo(llGetOwner(),0,"\nANIM|"+llList2String(vAZ,vDO)+"|"+(string)vDN+"|"+(string)(llRot2Euler(vDP)*RAD_TO_DEG)+"|"+llList2String(vAZ,vDO+3));llSetObjectName(vDR);llMessageLinked(LINK_SET,vAT,llDumpList2String(vAZ,"^"),NULL_KEY);llMessageLinked(LINK_SET,(vAT+2000000),llDumpList2String(vAZ,"^"),NULL_KEY);}}else if(vCM==204){integer vEO;string vDR=llGetObjectName();llSetObjectName(llGetLinkName(1));for(vEO=0;vEO<llGetListLength(vAZ)/8;++vEO){list vDS=llList2List(vAZ,vEO*vAS,vEO*vAS+3);vDS=llListReplaceList(vDS,[RAD_TO_DEG*llRot2Euler(llList2Rot(vDS,2))],2,2);string vDT="ANIM|"+llDumpList2String(vDS,"|");llRegionSayTo(llGetOwner(),0,"\n"+vDT);}llRegionSay(vAA,"posdump");llSetObjectName(vDR);}else if(vCM==vAU){llSay(0,"Memory Used by "+llGetScriptName()+": "+(string)llGetUsedMemory()+" of "+(string)llGetMemoryLimit()+",Leaving "+(string)llGetFreeMemory()+" memory free.");}}run_time_permissions(integer vDU){vBA=llGetPermissionsKey();if(vAE!=1){integer vDV=llListFindList(vAZ,[vBA]);vAB=llList2String(vAZ,vDV-4);list vDW=llGetAnimationList(vBA);integer vDX=llListFindList(vDW,[(key)"1a5fe8ac-a804-8a5d-7cbd-56bd83184568"]);integer vDY=llListFindList(vAC,[(string)vBA]);if(vAH!=1){if(vDX!=-1){vAN="Sit";vAC+=[(string)vBA,"Sit"];}if(vDY!=-1){vAN=llList2String(vAC,vDY+1);}if(vAN!=""){llStopAnimation(vAN);}vDY=llListFindList(vAC,[(string)vBA]);vAC=llListReplaceList(vAC,[(string)vBA,vAB],vDY,vDY+1);if(vDV!=-1){if(llListFindList(vBH(),[vBA])!=-1){llStartAnimation(vAB);}}}else if(llListFindList(vBH(),[vBA])!=-1){llStopAnimation(vAB);llStartAnimation("sit");llSleep(0.05);llStopAnimation("sit");llStartAnimation(vAB);}}if(vAF==1){llSetTimerEvent(1.0);vAE=1;}else{llSetTimerEvent(0.0);vAE=0;}for(;vAO<vEP-1;){vAO+=1;if(llList2Key(vAZ,vAO*8+4)!=""){doSeats(vAO,llList2String(vAZ,(vAO)*8+4));return;}}}timer(){integer vEO;integer vEP=llGetListLength(vAZ)/8;key vEB;integer vEC;integer vED;if(vBD=="on"){for(vEO=0;vEO<vEP;++vEO){vEB=(key)llList2String(vAZ,vEO*8+4);vED=0;integer vEE=llListFindList(vAY,[vEB]);integer vEF=llList2Integer(vAY,vEE+1);if(vEF==0){if(vEB!=""){vAD=llParseString2List(llList2String(vAZ,vEO*8+3),["~"],[]);vEC=llGetListLength(vAD);if(vEC>0&&(llListFindList(vBH(),[vBA])!=-1)){vAE=1;vBA=llGetPermissionsKey();llRequestPermissions(vEB,PERMISSION_TRIGGER_ANIMATION);}}integer vEH;for(vEH=0;vEH<vEC;++vEH){if(vEC>0){if(vED<vEC){if(vBM(vEB)!=-1){llStartAnimation(llList2String(vAD,vED));}}vED++;}}}else if(vEB!=""){vEC=llList2Integer(vAY,vEE+2);if((vEC>0)&&(llListFindList(vBH(),[vBA])!=-1)){vAE=1;vBA=llGetPermissionsKey();llRequestPermissions(vEB,PERMISSION_TRIGGER_ANIMATION);}integer vEH;for(vEH=1;vEH<=vEC;++vEH){if(vED<vEC){integer vEI=vEE+1+(vEH*2);string vEJ=llList2String(vAY,vEI);if(llList2Integer(vAY,vEI+1)>0){vAY=llListReplaceList(vAY,[llList2Integer(vAY,vEI+1)-1],vEI+1,vEI+1);}if(vEC>0){if(vBM(vEB)!=-1&&llList2Integer(vAY,vEI+1)>0){llStartAnimation(vEJ);}else if(vBM(vEB)!=-1&&llList2Integer(vAY,vEI+1)==-1){llStartAnimation(vEJ);}vED++;}}}}}if(llGetListLength(vBH())<1){llSetTimerEvent(0.0);vAE=0;}}}object_rez(key vEK){if(llKey2Name(vEK)=="Adjuster"){vAV+=[vEK];integer vEL=llGetListLength(vAV);ChatAdjusterPos(vEL-1);if(vEL<(llGetListLength(vAZ)/8)){RezNextAdjuster();}}}changed(integer vEM){if(vEM&CHANGED_LINK){integer vEN=llGetNumberOfPrims();if(vAM>vEN){integer vEO;integer vEP=llGetListLength(vAC)/2;for(vEO=0;vEO<vEP;++vEO){if(vBM((key)llList2String(vAC,vEO*2))==-1){integer vEQ=llListFindList(vAX,[(key)llList2String(vAC,vEO*2)]);if(vEQ!=-1){vAX=llDeleteSubList(vAX,vEQ,vEQ+2);}vAC=llDeleteSubList(vAC,vEO*2,vEO*2+1);}}}vAM=vEN;if(vAM==vAL){vAC=[];vAB="";vAN="";}}else if(vEM&CHANGED_OWNER){llResetScript();}}}
