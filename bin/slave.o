// The nPose scripts are licensed under the GPLv2
// (http://www.gnu.org/licenses/gpl-2.0.txt), with the following
// addendum:
//
// The nPose scripts are free to be copied, modified, and
// redistributed, subject to the following conditions:
//
//    - If you distribute the nPose scripts, you must leave them full
//      perms.
//
//    - If you modify the nPose scripts and distribute the
//      modifications, you must also make your modifications full
//      perms.
//
// "Full perms" means having the modify, copy, and transfer
// permissions enabled in Second Life and/or other virtual world
// platforms derived from Second Life (such as OpenSim).  If the
// platform should allow more fine-grained permissions, then "full
// perms" will mean the most permissive possible set of permissions
// allowed by the platform.
// =repo-npose/slave.o
// compiled Sat Feb  1 06:03:58 2014 UTC
integer vAA;string vAB;list vAC;list vAD;integer vAE=0;integer vAF=0;integer vAG=206;integer vAH=0;integer vAI=208;integer vAJ=209;integer vAK;integer vAL;integer vAM;string vAN;integer vAO;integer vAP;integer vAQ=20;list vAR;integer vAS=8;integer vAT=35353;integer vAU=34334;list vAV=[];integer vAW=-218;list vAX;list vAY=[];list vAZ;key vBA;integer vEN;integer vBC=-222;string vBD="on";doSeats(integer vBE,key vBF){if(vAH!=1){vector vBG=vBU(vBE);int avlinknum=vBQ(vBF);{key vBH=llGetLinkKey(avlinknum);if(vBH){vector vBI=llGetAgentSize(vBH);if(vBI){rotation vBJ=ZERO_ROTATION;vector vBK=ZERO_VECTOR;if(llGetLinkNumber()>1){vBJ=llGetLocalRot();vBK=llGetLocalPos();}vBG.z+=0.4;SLPPF(avlinknum,[PRIM_POSITION,((vBG-(llRot2Up(llList2Rot(vAZ,((vBE)*8)+2))*vBI.z*0.02638))*vBJ)+vBK,PRIM_ROTATION,(llList2Rot(vAZ,((vBE)*8)+2))*vBJ/llGetRootRotation()]);}}}}if(vBF!=""){vAE=0;vEN=llGetListLength(vAZ)/8;llRequestPermissions(vBF,PERMISSION_TRIGGER_ANIMATION);}}list vBL(){list vBM;integer vBS=llGetNumberOfPrims();integer vEM;for(vEM=vBS;vEM>=0;vEM--){key vEI=llGetLinkKey(vEM);if(llGetAgentSize(vEI)!=ZERO_VECTOR){vBM=[vEI]+vBM;}else{return vBM;}}return[];}integer vBQ(key vDZ){integer vBS=llGetNumberOfPrims();key vBT=llGetLinkKey(vBS);while((vBT!=vDZ)&&(llGetAgentSize((vBT=llGetLinkKey((--vBS))))!=ZERO_VECTOR));return(vBS*(vBT==vDZ)-(vBT!=vDZ));}vector vBU(integer vEM){string vBW=llList2String(vAZ,vEM*vAS+4);integer vBX=llListFindList(vAR,[(key)vBW]);rotation vCH=llList2Rot(vAZ,vEM*vAS+2);vector vCG=(vector)llList2String(vAZ,vEM*vAS+1);if(vBX!=-1){vector vCC=llList2Vector(vAR,vBX+1);vCG+=vCC*vCH;}return vCG;}SetAvatarOffset(key vCB,vector vCC){integer vCD=llListFindList(vAR,[vCB]);if(vCC==ZERO_VECTOR){vAR=llListReplaceList(vAR,[vCB,vCC],vCD,vCD+1);}if(vCD<0){vCD=vAP;vAP=(vAP+2)% vAQ;}else{vCC=llList2Vector(vAR,vCD+1)+vCC;}vAR=llListReplaceList(vAR,[vCB,vCC],vCD,vCD+1);}RezNextAdjuster(){llRezObject("Adjuster",llGetPos()+<0,0,1>,ZERO_VECTOR,llGetRot(),vAA);}ChatAdjusterPos(integer vCE){integer vEO=vCE*vAS;vector vCG=llGetPos()+llList2Vector(vAZ,vEO+1)*llGetRot();rotation vCH=llList2Rot(vAZ,vEO+2)*llGetRot();string vCI=llList2String(vAV,vCE)+"|posrot|"+(string)vCG+"|"+(string)vCH;llRegionSay(vAA,vCI);}default{state_entry(){llMessageLinked(LINK_SET,999999,"","");vAL=llGetNumberOfPrims();vAM=vAL;}link_message(integer vCJ,integer vCK,string vCL,key vEI){if(vCK==1){vAA=(integer)vCL;}if(vCK==vAW){key vDZ;list vCO=llParseString2List(vCL,["/"],[]);if(llListFindList(vBL(),[(key)llList2String(vCO,0)])!=-1){vDZ=(key)llList2String(vCO,0);}if(vDZ){llRequestPermissions(vDZ,PERMISSION_TRIGGER_ANIMATION);vDZ=llGetPermissionsKey();list vCP=llParseString2List(llList2String(vCO,1),["~"],[]);integer vCQ;integer vCR=llGetListLength(vCP);for(vCQ=0;vCQ<vCR;++vCQ){vCO=llParseString2List(llList2String(vCP,vCQ),[","],[]);if(llList2String(vCO,0)=="stopAll"){vAX=[vDZ,llList2String(vCO,0),llList2String(vCO,1)]+vAX;}else{integer vEO=llListFindList(vAX,[llList2String(vCO,1)]);if(vEO>=1&(key)llList2String(vAX,vEO-2)==vDZ){vAX=llDeleteSubList(vAX,vEO-2,vEO);}vAX+=[vDZ,llList2String(vCO,0),llList2String(vCO,1)];}}integer vEM;vCR=llGetListLength(vAX)/3;for(vEM=0;vEM<vCR;++vEM){if((key)llList2String(vAX,vEM*3)==vDZ){if(llList2String(vAX,vEM*3+1)=="stopAll"){vAX=llDeleteSubList(vAX,vEM*3,vEM*3+2);vEM-=1;vCR-=1;integer vEF;integer vCV=llGetListLength(vAX)/3;if(vCV>0){for(vEF=0;vEF<vCV;++vEF){if((key)llList2String(vAX,vEF*3)==vDZ&&llList2String(vAX,vEF*3+2)!=""){llStopAnimation(llList2String(vAX,vEF*3+2));vAX=llDeleteSubList(vAX,vEF*3,vEF*3+2);vEF-=1;vCV-=1;}}}}else if(llList2String(vAX,vEM*3+1)=="start"&&llList2String(vAX,vEM*3)==vDZ&&llList2String(vAX,vEM*3+2)!=""){if(llGetPermissions()&PERMISSION_TRIGGER_ANIMATION){llStartAnimation(llList2String(vAX,vEM*3+2));}}else if(llList2String(vAX,vEM*3+1)=="stop"){if(llGetPermissions()&PERMISSION_TRIGGER_ANIMATION){llStopAnimation(llList2String(vAX,vEM*3+2));vAX=llDeleteSubList(vAX,vEM*3,vEM*3+2);vEM-=1;vCR-=1;}}}}}}else if(vCK==vAI){SetAvatarOffset(vEI,(vector)vCL);llMessageLinked(LINK_SET,vAT,llDumpList2String(vAZ,"^"),NULL_KEY);}else if(vCK==vAJ){SetAvatarOffset(vEI,(vector)vCL);llMessageLinked(LINK_SET,vAT,llDumpList2String(vAZ,"^"),NULL_KEY);}else if(vCK==-241){vBD=vCL;}else if(vCK==vAT){list vCW=llParseStringKeepNulls(vCL,["^"],[]);integer vEN=llGetListLength(vCW)/8;vAZ=[];vAY=[];vAF=0;string vCY="";string vDD="";for(vAO=1;vAO<=vEN;++vAO){integer vDA=(integer)llGetSubString(llList2String(vCW,(vAO-1)*8+7),4,-1);vAZ=vAZ+[llList2String(vCW,(vAO-1)*8),(vector)llList2String(vCW,(vAO-1)*8+1),(rotation)llList2String(vCW,(vAO-1)*8+2),llList2String(vCW,(vAO-1)*8+3),(key)llList2String(vCW,(vAO-1)*8+4),llList2String(vCW,(vAO-1)*8+5),llList2String(vCW,(vAO-1)*8+6),llList2String(vCW,(vAO-1)*8+7)];if(llList2String(vAZ,(vAO-1)*8+4)!=""){vCY+=llGetSubString(llKey2Name((key)llList2String(vCW,(vAO-1)*8+4)),0,20)+",";}else{vCY+=llList2String(vCW,(vAO-1)*8+7)+",";}if(llList2String(vCW,(vAO-1)*8+3)!=""){list vDB=llParseString2List(llList2String(vCW,(vAO-1)*8+3),["~"],[]);integer vEA=llGetListLength(vDB);list vDD=[];integer vDE;integer vDF=0;for(vDE=0;vDE<vEA;++vDE){list vDG=llParseString2List(llList2String(vDB,vDE),["="],[]);if(llList2String(vDG,1)){vDD+=[llList2String(vDG,0),(integer)llList2String(vDG,1)];vDF=1;}else{vDD+=[llList2String(vDG,0),-1];}}vAF=1;vAY+=[(key)llList2String(vCW,(vAO-1)*8+4),vDF,vEA]+vDD;}}llMessageLinked(LINK_SET,vAT+1,vCY,NULL_KEY);vCY="";for(vAO=0;vAO<vEN;++vAO){if(llList2Key(vAZ,vAO*8+4)!=""){if(llListFindList(vBL(),[llList2Key(vAZ,vAO*8+4)])!=-1){vAH=0;doSeats(vAO,llList2String(vAZ,(vAO)*8+4));return;}}}}else if(vCK==vBC){llUnSit((key)vCL);}else if(vCK==vAG){vAH=1;integer vEN=llGetListLength(vAZ)/8;for(vAO=0;vAO<vEN;++vAO){doSeats(vAO,llList2String(vAZ,(vAO)*8+4));return;}}else if(vCK==201){llSay(vAA,"adjuster_die");vAV=[];if(llGetInventoryType("Adjuster")&INVENTORY_OBJECT){RezNextAdjuster();}else{llRegionSayTo(llGetOwner(),0,"Seat Adjustment disabled.  No Adjuster object found in"+llGetObjectName()+".");}}else if(vCK==205){llMessageLinked(LINK_SET,204,"","");llSay(vAA,"adjuster_die");vAV=[];}else if(vCK==2&&vCL=="RezAdjuster"){vAV=[];RezNextAdjuster();}else if(vCK==3){integer vEO=llListFindList(vAV,[vEI]);if(vEO!=-1){string vDP=llGetObjectName();llSetObjectName(llGetLinkName(1));list vDK=llParseString2List(vCL,["|"],[]);vector vDL=(vector)llList2String(vDK,0)-llGetPos();vDL=vDL/llGetRot();integer vDM=vEO*vAS;rotation vDN=(rotation)llList2String(vDK,1)/llGetRot();vAZ=llListReplaceList(vAZ,[vDL,vDN],vDM+1,vDM+2);llRegionSayTo(llGetOwner(),0,"\nANIM|"+llList2String(vAZ,vDM)+"|"+(string)vDL+"|"+(string)(llRot2Euler(vDN)*RAD_TO_DEG)+"|"+llList2String(vAZ,vDM+3));llSetObjectName(vDP);llMessageLinked(LINK_SET,vAT,llDumpList2String(vAZ,"^"),NULL_KEY);llMessageLinked(LINK_SET,(vAT+2000000),llDumpList2String(vAZ,"^"),NULL_KEY);}}else if(vCK==204){integer vEM;string vDP=llGetObjectName();llSetObjectName(llGetLinkName(1));for(vEM=0;vEM<llGetListLength(vAZ)/8;++vEM){list vDQ=llList2List(vAZ,vEM*vAS,vEM*vAS+3);vDQ=llListReplaceList(vDQ,[RAD_TO_DEG*llRot2Euler(llList2Rot(vDQ,2))],2,2);string vDR="ANIM|"+llDumpList2String(vDQ,"|");llRegionSayTo(llGetOwner(),0,"\n"+vDR);}llRegionSay(vAA,"posdump");llSetObjectName(vDP);}else if(vCK==vAU){llSay(0,"Memory Used by "+llGetScriptName()+": "+(string)llGetUsedMemory()+" of "+(string)llGetMemoryLimit()+",Leaving "+(string)llGetFreeMemory()+" memory free.");}}run_time_permissions(integer vDS){vBA=llGetPermissionsKey();if(vAE!=1){integer vDT=llListFindList(vAZ,[vBA]);vAB=llList2String(vAZ,vDT-4);list vDU=llGetAnimationList(vBA);integer vDV=llListFindList(vDU,[(key)"1a5fe8ac-a804-8a5d-7cbd-56bd83184568"]);integer vDW=llListFindList(vAC,[(string)vBA]);if(vAH!=1){if(vDV!=-1){vAN="Sit";vAC+=[(string)vBA,"Sit"];}if(vDW!=-1){vAN=llList2String(vAC,vDW+1);}if(vAN!=""){llStopAnimation(vAN);}vDW=llListFindList(vAC,[(string)vBA]);vAC=llListReplaceList(vAC,[(string)vBA,vAB],vDW,vDW+1);if(vDT!=-1){if(llListFindList(vBL(),[vBA])!=-1){llStartAnimation(vAB);}}}else if(llListFindList(vBL(),[vBA])!=-1){llStopAnimation(vAB);llStartAnimation("sit");llSleep(0.05);llStopAnimation("sit");llStartAnimation(vAB);}}if(vAF==1){llSetTimerEvent(1.0);vAE=1;}else{llSetTimerEvent(0.0);vAE=0;}for(;vAO<vEN-1;){vAO+=1;if(llList2Key(vAZ,vAO*8+4)!=""){doSeats(vAO,llList2String(vAZ,(vAO)*8+4));return;}}}timer(){integer vEM;integer vEN=llGetListLength(vAZ)/8;key vDZ;integer vEA;integer vEB;if(vBD=="on"){for(vEM=0;vEM<vEN;++vEM){vDZ=(key)llList2String(vAZ,vEM*8+4);vEB=0;integer vEC=llListFindList(vAY,[vDZ]);integer vED=llList2Integer(vAY,vEC+1);if(vED==0){if(vDZ!=""){vAD=llParseString2List(llList2String(vAZ,vEM*8+3),["~"],[]);vEA=llGetListLength(vAD);if(vEA>0&&(llListFindList(vBL(),[vBA])!=-1)){vAE=1;vBA=llGetPermissionsKey();llRequestPermissions(vDZ,PERMISSION_TRIGGER_ANIMATION);}}integer vEF;for(vEF=0;vEF<vEA;++vEF){if(vEA>0){if(vEB<vEA){if(vBQ(vDZ)!=-1){llStartAnimation(llList2String(vAD,vEB));}}vEB++;}}}else if(vDZ!=""){vEA=llList2Integer(vAY,vEC+2);if((vEA>0)&&(llListFindList(vBL(),[vBA])!=-1)){vAE=1;vBA=llGetPermissionsKey();llRequestPermissions(vDZ,PERMISSION_TRIGGER_ANIMATION);}integer vEF;for(vEF=1;vEF<=vEA;++vEF){if(vEB<vEA){integer vEG=vEC+1+(vEF*2);string vEH=llList2String(vAY,vEG);if(llList2Integer(vAY,vEG+1)>0){vAY=llListReplaceList(vAY,[llList2Integer(vAY,vEG+1)-1],vEG+1,vEG+1);}if(vEA>0){if(vBQ(vDZ)!=-1&&llList2Integer(vAY,vEG+1)>0){llStartAnimation(vEH);}else if(vBQ(vDZ)!=-1&&llList2Integer(vAY,vEG+1)==-1){llStartAnimation(vEH);}vEB++;}}}}}if(llGetListLength(vBL())<1){llSetTimerEvent(0.0);vAE=0;}}}object_rez(key vEI){if(llKey2Name(vEI)=="Adjuster"){vAV+=[vEI];integer vEJ=llGetListLength(vAV);ChatAdjusterPos(vEJ-1);if(vEJ<(llGetListLength(vAZ)/8)){RezNextAdjuster();}}}changed(integer vEK){if(vEK&CHANGED_LINK){integer vEL=llGetNumberOfPrims();if(vAM>vEL){integer vEM;integer vEN=llGetListLength(vAC)/2;for(vEM=0;vEM<vEN;++vEM){if(vBQ((key)llList2String(vAC,vEM*2))==-1){integer vEO=llListFindList(vAX,[(key)llList2String(vAC,vEM*2)]);if(vEO!=-1){vAX=llDeleteSubList(vAX,vEO,vEO+2);}vAC=llDeleteSubList(vAC,vEM*2,vEM*2+1);}}}vAM=vEL;if(vAM==vAL){vAC=[];vAB="";vAN="";}}else if(vEK&CHANGED_OWNER){llResetScript();}}}
