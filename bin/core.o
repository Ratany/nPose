// The nPose scripts are licensed under the GPLv2
// (http://www.gnu.org/licenses/gpl-2.0.txt), with the following
// addendum:
//
// The nPose scripts are free to be copied, modified, and
// redistributed, subject to the following conditions:
//
//    - If you distribute the nPose scripts, you must leave them full
//      perms.
//
//    - If you modify the nPose scripts and distribute the
//      modifications, you must also make your modifications full
//      perms.
//
// "Full perms" means having the modify, copy, and transfer
// permissions enabled in Second Life and/or other virtual world
// platforms derived from Second Life (such as OpenSim).  If the
// platform should allow more fine-grained permissions, then "full
// perms" will mean the most permissive possible set of permissions
// allowed by the platform.
// =repo-npose/core.o
// compiled Tue Jan 28 14:35:19 2014 UTC
integer vAA=0;list vAB;integer vAC=0;integer vAD=0;integer vAE=12;integer vAF;integer vBO;key vAH;key vAI;integer vAJ;string vAK;integer vAL;key vAM;string vAN;list vAO;key vAP;integer vAQ=0;list vAR(){list vAS=[];integer vCG=llGetNumberOfPrims();while(vCG){key vDD=llGetLinkKey(vCG);if(llGetAgentSize(vDD)!=ZERO_VECTOR){vAS=[vDD]+vAS;}--vCG;}return vAS;}assignSlots(){list vAV=vAR();integer vCH=llGetListLength(vAV);if(vAA<vAE){integer vBI=vAA;while(vBI<=vAE){if(llList2Key(vAB,vBI*8+4)!=""){integer vAY;vAY=0;while((vAY<vAA)&&(llList2String(vAB,vAY*8+4)!="")){++vAY;}vAY*=((vAY!=vAA)-(vAY==vAA));if(vAY>=0){vAB=llListReplaceList(vAB,[llList2Key(vAB,vBI*8+4)],vAY*8+4,vAY*8+4);}}++vBI;}vAB=llDeleteSubList(vAB,(vAA)*8,-1);integer vCG=0;while(vCG<vCH){if(llListFindList(vAB,[llList2Key(vAV,vCG)])<0){llMessageLinked(LINK_SET,-222,llList2String(vAV,vCG),NULL_KEY);}++vCG;}}if(vAC>vAD){key vBA=llList2Key(vAV,vCH-1);integer vBB=llGetObjectPrimCount(llGetKey());integer vCR=-1;integer vCG=1;while(vCG<=vBB){integer vBI=(integer)llGetSubString(llGetLinkName(vCG),4,-1);if((vBI>0)&&(vBI<=vAA)){if(llAvatarOnLinkSitTarget(vCG)==vBA){if(llList2String(vAB,(vBI-1)*8+4)==""){vCR=(integer)llGetLinkName(vCG);}}}++vCG;}integer vBF;for(vBF=1;vBF<=vBB;++vBF){if(vCR!=-1&&llListFindList(vAB,[vBA])==-1){if(vCR<=vAA){vAB=llListReplaceList(vAB,[vBA],(vCR-1)*8+4,(vCR-1)*8+4);}else{integer vBH;vBH=0;while((vBH<vAA)&&(llList2String(vAB,vBH*8+4)!="")){++vBH;}vBH*=((vBH!=vAA)-(vBH==vAA));if(vBH>=0){vAB=llListReplaceList(vAB,[vBA],vBH*8+4,vBH*8+4);}else if(llListFindList(vAR(),[vBA])!=-1){llMessageLinked(LINK_SET,-222,(string)vBA,NULL_KEY);}}}if(llListFindList(vAB,[vBA])==-1){integer vBH;vBH=0;while((vBH<vAA)&&(llList2String(vAB,vBH*8+4)!="")){++vBH;}vBH*=((vBH!=vAA)-(vBH==vAA));if(vBH>=0){vAB=llListReplaceList(vAB,[vBA],vBH*8+4,vBH*8+4);}else if(llListFindList(vAR(),[vBA])!=-1){llMessageLinked(LINK_SET,-222,(string)vBA,NULL_KEY);}}}}else if(vAC<vAD){integer vBI=0;while(vBI<vAA){if(llListFindList(vAV,[llList2Key(vAB,vBI*8+4)])<0){vAB=llListReplaceList(vAB,[""],vBI*8+4,vBI*8+4);}++vBI;}}vAD=vAC;vAE=vAA;llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);}SwapTwoSlots(integer vBJ,integer vBK){if(vBK<=vAA){integer vBL=llListFindList(vAB,["seat"+(string)vBJ])/8;integer vBM=llListFindList(vAB,["seat"+(string)vBK])/8;list vBN=llList2List(vAB,vBM*8,vBM*8+3)+[llList2Key(vAB,vBL*8+4)]+llList2List(vAB,vBM*8+5,vBM*8+7);vAB=llListReplaceList(vAB,llList2List(vAB,vBL*8,vBL*8+3)+[llList2Key(vAB,vBM*8+4)]+llList2List(vAB,vBL*8+5,vBL*8+7),vBL*8,(vBL+1)*8-1);vAB=llListReplaceList(vAB,vBN,vBM*8,(vBM+1)*8-1);}else{llRegionSayTo(llList2Key(vAB,llListFindList(vAB,["seat"+(string)vBJ])-4),0,"Seat "+(string)vBK+" is not available for this pose set");}llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);}ProcessLine(string vBO,key vBP){vBO=llStringTrim(vBO,STRING_TRIM);list vDA=llParseString2List(vBO,["|"],[]);string vBR=llList2String(vDA,0);if("ANIM"==vBR){if(vAA<vAE){vAB=llListReplaceList(vAB,[llList2String(vDA,1),(vector)llList2String(vDA,2),llEuler2Rot((vector)llList2String(vDA,3)*DEG_TO_RAD),llList2String(vDA,4),llList2Key(vAB,(vAA)*8+4),"","","seat"+(string)(vAA+1)],(vAA)*8,(vAA)*8+7);}else{vAB+=[llList2String(vDA,1),(vector)llList2String(vDA,2),llEuler2Rot((vector)llList2String(vDA,3)*DEG_TO_RAD),llList2String(vDA,4),"","","","seat"+(string)(vAA+1)];}vAA++;return;}if("SINGLE"==vBR){integer vBS=llListFindList(vAB,[(vector)llList2String(vDA,2)]);if((vBS==-1)||((vBS!=-1)&&llList2String(vAB,vBS-1)!=llList2String(vDA,1))){integer vBT=llListFindList(vAB,[vAI])-4;vAB=llListReplaceList(vAB,[llList2String(vDA,1),(vector)llList2String(vDA,2),llEuler2Rot((vector)llList2String(vDA,3)*DEG_TO_RAD),llList2String(vDA,4),llList2Key(vAB,vBT+4),"","",llList2String(vAB,vBT+7)],vBT,vBT+7);}vAA=llGetListLength(vAB)/8;vAE=vAA;return;}if("PROP"==vBR){string vBU=llList2String(vDA,1);if(llGetInventoryType(vBU)==INVENTORY_OBJECT){list vBV=llParseString2List(llList2String(vDA,2),["="],[]);if(llList2String(vBV,1)=="die"){llRegionSay(vAJ,llList2String(vBV,0)+"=die");}else{if(llList2String(vDA,4)=="explicit"){vAQ=1;}else{vAQ=0;}vector vBW=(vector)llList2String(vDA,2);vector vBX=llGetPos()+(vBW*llGetRot());rotation vBY=llEuler2Rot((vector)llList2String(vDA,3)*DEG_TO_RAD)*llGetRot();if(llVecMag(vBW)>9.9){llRezAtRoot(vBU,llGetPos(),ZERO_VECTOR,vBY,vAJ);llSleep(1.0);llRegionSay(vAJ,llDumpList2String(["MOVEPROP",vBU,(string)vBX],"|"));}else{llRezAtRoot(vBU,llGetPos()+((vector)llList2String(vDA,2)*llGetRot()),ZERO_VECTOR,vBY,vAJ);}}}return;}if("LINKMSG"==vBR){integer vCJ=(integer)llList2String(vDA,1);string vCA=llDumpList2String(llParseStringKeepNulls(vBO,["%AVKEY%"],[]),vBP);list vCB=llParseString2List(vCA,["|"],[]);key vCC;if((key)llList2String(vCB,3)!=""){vCC=(key)llList2String(vCB,3);}else{vCC=(key)llList2String(vAB,(vAA-1)*8+4);}string vCK=llList2String(vCB,2);llMessageLinked(LINK_SET,vCJ,vCK,vCC);llSleep(1.0);llRegionSay(vAJ,llDumpList2String(["LINKMSGQUE",vCJ,vCK,vCC],"|"));return;}if("SATMSG"==vBR){integer vCF=(vAA-1)*8+5;vAB=llListReplaceList(vAB,[llDumpList2String([llList2String(vAB,vCF),llDumpList2String(llDeleteSubList(vDA,0,0),"|")],"§")],vCF,vCF);return;}if("NOTSATMSG"==vBR){integer vCF=(vAA-1)*8+6;vAB=llListReplaceList(vAB,[llDumpList2String([llList2String(vAB,vCF),llDumpList2String(llDeleteSubList(vDA,0,0),"|")],"§")],vCF,vCF);}}default{state_entry(){llOwnerSay("("+(string)((61440-llGetUsedMemory())>>10)+"kB) ~> repo-npose-2dd398761846c8326441f1c0294a6bdb71e5b923");vAC=llGetNumberOfPrims();integer vCG=llGetObjectPrimCount(llGetKey());if(!(vCG)){llLinkSitTarget(vCG,<0.0,0.0,0.5>,ZERO_ROTATION);}while(vCG){llLinkSitTarget(vCG,<0.0,0.0,0.5>,ZERO_ROTATION);--vCG;}vAJ=(integer)("0x"+llGetSubString((string)llGetKey(),0,7));llMessageLinked(LINK_SET,1,(string)vAJ,NULL_KEY);vAC=llGetNumberOfPrims();vAD=vAC;llListen(vAJ,"","","");vAK="";integer vCH=llGetInventoryNumber(INVENTORY_NOTECARD);while(vCG<vCH){vAK=llGetInventoryName(INVENTORY_NOTECARD,vCG);if((llSubStringIndex(vAK,"DEFAULT:")==0)||(llSubStringIndex(vAK,"SET:")==0)){llMessageLinked(LINK_SET,200,vAK,NULL_KEY);return;}++vCG;}}link_message(integer vCI,integer vCJ,string vCK,key vDD){if(vCJ==999999){llResetScript();}if(vCJ==200){vAK=vCK;vAI=vDD;vAE=vAA;vAA=0;llRegionSay(vAJ,"die");llRegionSay(vAJ,"adjuster_die");vAO=[];vBO=0;if(llGetInventoryKey(vAK)){vAH=llGetNotecardLine(vAK,vBO);}return;}if(vCJ==207){vAN=vCK;vAI=vDD;vAL=0;vAM=llGetNotecardLine(vAN,vAL);return;}if(vCJ==201){vAO=[];vAF=TRUE;return;}if(vCJ==205){vAO=[];vAF=FALSE;return;}if(vCJ==300){list vCZ=llParseString2List(vCK,["|"],[]);if(vDD!=NULL_KEY){vCZ=llListReplaceList((vCZ=[])+vCZ,[vDD],2,2);}llRegionSay(vAJ,llDumpList2String(["LINKMSG",(string)llList2String(vCZ,0),llList2String(vCZ,1),(string)llList2String(vCZ,2)],"|"));return;}if(vCJ==202){if(llGetListLength(vAB)/8>=2){list vCN=llParseString2List(vCK,[","],[]);SwapTwoSlots((integer)llList2String(vCN,0),(integer)llList2String(vCN,1));}return;}if(vCJ==210){{integer vCO=(integer)llGetSubString(llList2String(vAB,llListFindList(vAB,[vDD])+3),4,-1);if(vCO<=0){llWhisper(0,"avatar is not assigned a slot: "+(string)vDD);}else{SwapTwoSlots(vCO,(integer)vCK);}}return;}if(vCJ==(2035353)){list vCP=llParseStringKeepNulls(vCK,["^"],[]);integer vCQ=llGetListLength(vCP)/8;integer vCR;for(vCR=0;vCR<vCQ;++vCR){vAB=llListReplaceList(vAB,[llList2String(vCP,vCR*8),(vector)llList2String(vCP,vCR*8+1),(rotation)llList2String(vCP,vCR*8+2),llList2String(vCP,vCR*8+3),(key)llList2String(vCP,vCR*8+4),llList2String(vCP,vCR*8+5),llList2String(vCP,vCR*8+6),llList2String(vCP,vCR*8+7)],vCR*8,vCR*8+7);}return;}if(vCJ==-999&&vCK=="RezHud"){if(llGetInventoryType("npose admin hud")!=INVENTORY_NONE){llRezObject("npose admin hud",llGetPos()+<0,0,1>,ZERO_VECTOR,llGetRot(),vAJ);}return;}if(vCJ==-999&&vCK=="RemoveHud"){llRegionSayTo(vAP,vAJ,"/die");return;}if(vCJ==34334){llSay(0,"Memory Used by "+llGetScriptName()+": "+(string)llGetUsedMemory()+" of "+(string)llGetMemoryLimit()+", Leaving "+(string)llGetFreeMemory()+" memory free.");return;}}object_rez(key vDD){if(llKey2Name(vDD)=="Adjuster"){vAO+=[vDD];return;}if(llKey2Name(vDD)=="npose admin hud"){vAP=vDD;llSleep(2.0);llRegionSayTo(vAP,vAJ,"parent|"+(string)llGetKey());}}listen(integer vCT,string vCU,key vDD,string vCW){list vCX=llParseString2List(vCW,["|"],[]);if(vCU=="Adjuster"){llMessageLinked(LINK_SET,3,vCW,vDD);return;}if(!(llGetListLength(vCX)<2)){if(vCU==llKey2Name(vAP)){list vCY=["adjust",201,"stopadjust",205,"posdump",204,"hudsync",206];integer $_=llListFindList(vCY,[vCW]);if(~$_){llMessageLinked(LINK_SET,llList2Integer(vCY,$_+1),"","");}}return;}integer $_0=(llGetSubString(vCW,0,4)=="ping");integer $_1=(llGetSubString(vCW,0,8)=="PROPRELAY");if(($_0||$_1)&&(llGetOwnerKey(vDD)==llGetOwner())){if($_0){llRegionSay(vAJ,"pong|"+(string)vAQ+"|"+(string)llGetPos());return;}if($_1){list vCZ=llParseString2List(vCW,["|"],[]);llMessageLinked(LINK_SET,llList2Integer(vCZ,1),llList2String(vCZ,2),llList2Key(vCZ,3));return;}list vDA=llParseString2List(vCW,["|"],[]);vector vDB=(vector)llList2String(vDA,0)-llGetPos();vDB/=llGetRot();rotation vDC=llList2Rot(vDA,1)/llGetRot();string $_=llDumpList2String(["\nPROP",vCU,"|",vDB,llRot2Euler(vDC)*RAD_TO_DEG,llList2String(vDA,2)],"|");llRegionSayTo(llGetOwner(),0,$_);llMessageLinked(LINK_SET,34333,$_,NULL_KEY);}}dataserver(key vDD,string vDE){if(vDD==vAH){if(vDE==EOF){assignSlots();if(vAF){vAO=[];llMessageLinked(LINK_SET,2,"RezAdjuster","");}}else{ProcessLine(vDE,vAI);vBO++;vAH=llGetNotecardLine(vAK,vBO);}return;}if((vDD==vAM)&&(vDE!=EOF)){ProcessLine(vDE,vAI);vAL++;vAM=llGetNotecardLine(vAN,vAL);}}changed(integer vDF){if(vDF&CHANGED_LINK){llMessageLinked(LINK_SET,1,(string)vAJ,NULL_KEY);vAD=vAC;vAC=llGetNumberOfPrims();assignSlots();}if(vDF&CHANGED_INVENTORY){llResetScript();}if(vDF&CHANGED_REGION){llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);}}on_rez(integer vDG){llResetScript();}}
