// The nPose scripts are licensed under the GPLv2
// (http://www.gnu.org/licenses/gpl-2.0.txt), with the following
// addendum:
//
// The nPose scripts are free to be copied, modified, and
// redistributed, subject to the following conditions:
//
//    - If you distribute the nPose scripts, you must leave them full
//      perms.
//
//    - If you modify the nPose scripts and distribute the
//      modifications, you must also make your modifications full
//      perms.
//
// "Full perms" means having the modify, copy, and transfer
// permissions enabled in Second Life and/or other virtual world
// platforms derived from Second Life (such as OpenSim).  If the
// platform should allow more fine-grained permissions, then "full
// perms" will mean the most permissive possible set of permissions
// allowed by the platform.
// =repo-npose/core.o
// compiled Thu Jan 30 07:22:08 2014 UTC
integer vAA=0;list vAB;integer vAC=0;integer vAD=0;integer vAE;integer vAF;integer vAZ;key vAH;key vAI;integer vAJ;string vAK;integer vAL;key vAM;string vAN;list vAO;key vAP;integer vAQ=0;integer vAR(key vAS){integer vAT;{integer $_=llGetNumberOfPrims();vAT=$_;while($_&&!(vAT=!(llGetLinkKey($_)!=vAS))&&(ZERO_VECTOR!=llGetAgentSize(llGetLinkKey($_)))){--$_;}}return vAT;}SwapTwoSlots(integer vAU,integer vAV){if(vAV<=vAA){integer vAW=llListFindList(vAB,["seat"+(string)vAU])/8;integer vAX=llListFindList(vAB,["seat"+(string)vAV])/8;list vAY=llList2List(vAB,vAX*8,vAX*8+3)+[llList2Key(vAB,4+8*(vAW))]+llList2List(vAB,vAX*8+5,vAX*8+7);vAB=llListReplaceList(vAB,llList2List(vAB,vAW*8,vAW*8+3)+[llList2Key(vAB,4+8*(vAX))]+llList2List(vAB,vAW*8+5,vAW*8+7),vAW*8,(vAW+1)*8-1);vAB=llListReplaceList(vAB,vAY,vAX*8,(vAX+1)*8-1);}else{llRegionSayTo(llList2Key(vAB,llListFindList(vAB,["seat"+(string)vAU])-4),0,"Seat "+(string)vAV+" is not available for this pose set");}llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);}ProcessLine(string vAZ,key vBA){vAZ=llStringTrim(vAZ,STRING_TRIM);list vCM=llParseString2List(vAZ,["|"],[]);string vBC=llList2String(vCM,0);if("ANIM"==vBC){if(vAA<vAE){vAB=llListReplaceList(vAB,[llList2String(vCM,1),llList2Vector(vCM,2),llEuler2Rot((llList2Vector(vCM,3))*DEG_TO_RAD),llList2Key(vCM,4),llList2String(vAB,(vAA)*8+4),"","","seat"+(string)(vAA+1)],vAA*8,vAA*8+7);}else{vAB+=[llList2String(vCM,1),llList2Vector(vCM,2),llEuler2Rot((llList2Vector(vCM,3))*DEG_TO_RAD),llList2String(vCM,4),"","","","seat"+(string)(vAA+1)];}vAA++;return;}if("SINGLE"==vBC){integer vBD=llListFindList(vAB,[llList2Vector(vCM,2)]);if((vBD==-1)||((vBD!=-1)&&llList2String(vAB,vBD-1)!=llList2String(vCM,1))){integer vBE=llListFindList(vAB,[vAI])-4;vAB=llListReplaceList(vAB,[llList2String(vCM,1),llList2Vector(vCM,2),llEuler2Rot((llList2Vector(vCM,3))*DEG_TO_RAD),llList2String(vCM,4),llList2Key(vAB,vBE+4),"","",llList2String(vAB,vBE+7)],vBE,vBE+7);integer vBF=(vBE+7+8-7)/8;if(vBF>vAA){llOwnerSay(llDumpList2String(["(",(61440-llGetUsedMemory())>>10,"kB ) ~>","slot gap:",vBF-vAA,"slots","{","src/core.lsl",":",330,"}"]," "));vAA=vBF;vAE=vAA;}}return;}if("PROP"==vBC){string vBG=llList2String(vCM,1);if(llGetInventoryType(vBG)==INVENTORY_OBJECT){list vBH=llParseString2List(llList2String(vCM,2),["="],[]);if(llList2String(vBH,1)=="die"){llRegionSay(vAJ,llList2String(vBH,0)+"=die");}else{if(llList2String(vCM,4)=="explicit"){vAQ=1;}else{vAQ=0;}vector vBI=llList2Vector(vCM,2);vector vBJ=llGetPos()+(vBI*llGetRot());rotation vBK=llEuler2Rot((llList2Vector(vCM,3))*DEG_TO_RAD)*llGetRot();if(llVecMag(vBI)>9.9){llRezAtRoot(vBG,llGetPos(),ZERO_VECTOR,vBK,vAJ);llSleep(1.0);llRegionSay(vAJ,llDumpList2String(["MOVEPROP",vBG,(string)vBJ],"|"));}else{llRezAtRoot(vBG,llGetPos()+(llList2Vector(vCM,2)*llGetRot()),ZERO_VECTOR,vBK,vAJ);}}}return;}if("LINKMSG"==vBC){integer vBV=llList2Integer(vCM,1);string vBM=llDumpList2String(llParseStringKeepNulls(vAZ,["%AVKEY%"],[]),vBA);list vBN=llParseString2List(vBM,["|"],[]);key vBO=llList2Key(vBN,3);if(vBO==""){vBO=llList2Key(vAB,4+8*(vAA-1));}string vBW=llList2String(vBN,2);llMessageLinked(LINK_SET,vBV,vBW,vBO);llSleep(1.0);llRegionSay(vAJ,llDumpList2String(["LINKMSGQUE",vBV,vBW,vBO],"|"));return;}if("SATMSG"==vBC){integer vBR=(vAA-1)*8+5;vAB=llListReplaceList(vAB,[llDumpList2String([llList2String(vAB,vBR),llDumpList2String(llDeleteSubList(vCM,0,0),"|")],"§")],vBR,vBR);return;}if("NOTSATMSG"==vBC){integer vBR=(vAA-1)*8+6;vAB=llListReplaceList(vAB,[llDumpList2String([llList2String(vAB,vBR),llDumpList2String(llDeleteSubList(vCM,0,0),"|")],"§")],vBR,vBR);}}default{state_entry(){llOwnerSay("("+(string)((61440-llGetUsedMemory())>>10)+"kB) ~> repo-npose-ea6199722703518c081091ce7872a6482d19da02");integer vCY=llGetObjectPrimCount(llGetKey());if(!(vCY)){llLinkSitTarget(vCY,<0.0,0.0,0.5>,ZERO_ROTATION);}while(vCY){llLinkSitTarget(vCY,<0.0,0.0,0.5>,ZERO_ROTATION);--vCY;}vAJ=(integer)("0x"+llGetSubString((string)llGetKey(),0,7));llMessageLinked(LINK_SET,1,(string)vAJ,NULL_KEY);vAC=llGetNumberOfPrims();vAD=vAC;llListen(vAJ,"","","");vAK="";integer vBT=llGetInventoryNumber(INVENTORY_NOTECARD);while(vCY<vBT){vAK=llGetInventoryName(INVENTORY_NOTECARD,vCY);if(!(llSubStringIndex(vAK,"DEFAULT:")&&llSubStringIndex(vAK,"SET:"))){llMessageLinked(LINK_SET,200,vAK,NULL_KEY);return;}++vCY;}}link_message(integer vBU,integer vBV,string vBW,key vCP){if(vBV==999999){llResetScript();}if(vBV==200){vAK=vBW;vAI=vCP;vAE=vAA;vAA=0;llRegionSay(vAJ,"die");llRegionSay(vAJ,"adjuster_die");vAO=[];vAZ=0;if(llGetInventoryKey(vAK)){vAH=llGetNotecardLine(vAK,vAZ);}return;}if(vBV==207){vAN=vBW;vAI=vCP;vAL=0;vAM=llGetNotecardLine(vAN,vAL);return;}if(vBV==201){vAO=[];vAF=TRUE;return;}if(vBV==205){vAO=[];vAF=FALSE;return;}if(vBV==300){list vCL=llParseString2List(vBW,["|"],[]);if(vCP!=NULL_KEY){vCL=llListReplaceList(vCL,[vCP],2,2);}llRegionSay(vAJ,llDumpList2String(["LINKMSG"]+llList2List(vCL,0,2),"|"));return;}if(vBV==202){if(llGetListLength(vAB)/8>=2){list vBZ=llParseString2List(vBW,[","],[]);SwapTwoSlots(llList2Integer(vBZ,0),llList2Integer(vBZ,1));}return;}if(vBV==210){{integer vCA=(integer)llGetSubString(llList2String(vAB,llListFindList(vAB,[vCP])+3),4,-1);if(vCA<=0){llWhisper(0,"avatar is not assigned a slot: "+(string)vCP);}else{SwapTwoSlots(vCA,(integer)vBW);}}return;}if(vBV==(2035353)){list vCB=llParseStringKeepNulls(vBW,["^"],[]);integer vCC=llGetListLength(vCB)/8;integer vCZ;for(vCZ=0;vCZ<vCC;++vCZ){vAB=llListReplaceList(vAB,[llList2String(vCB,vCZ*8),llList2Vector(vCB,vCZ*8+1),llList2Rot(vCB,vCZ*8+2),llList2String(vCB,vCZ*8+3),llList2Key(vCB,vCZ*8+4),llList2String(vCB,vCZ*8+5),llList2String(vCB,vCZ*8+6),llList2String(vCB,vCZ*8+7)],vCZ*8,vCZ*8+7);}return;}if(vBV==-999&&vBW=="RezHud"){if(llGetInventoryType("npose admin hud")!=INVENTORY_NONE){llRezObject("npose admin hud",llGetPos()+<0,0,1>,ZERO_VECTOR,llGetRot(),vAJ);}return;}if(vBV==-999&&vBW=="RemoveHud"){llRegionSayTo(vAP,vAJ,"/die");return;}if(vBV==34334){llSay(0,"Memory Used by "+llGetScriptName()+": "+(string)llGetUsedMemory()+" of "+(string)llGetMemoryLimit()+", Leaving "+(string)llGetFreeMemory()+" memory free.");return;}}object_rez(key vCP){if(llKey2Name(vCP)=="Adjuster"){vAO+=[vCP];return;}if(llKey2Name(vCP)=="npose admin hud"){vAP=vCP;llSleep(2.0);llRegionSayTo(vAP,vAJ,"parent|"+(string)llGetKey());}}listen(integer vCF,string vCG,key vCP,string vCI){list vCJ=llParseString2List(vCI,["|"],[]);if(vCG=="Adjuster"){llMessageLinked(LINK_SET,3,vCI,vCP);return;}if(!(llGetListLength(vCJ)<2)){if(vCG==llKey2Name(vAP)){list vCK=["adjust",201,"stopadjust",205,"posdump",204,"hudsync",206];integer $_=llListFindList(vCK,[vCI]);if(~$_){llMessageLinked(LINK_SET,llList2Integer(vCK,$_+1),"","");}}return;}integer $_0=(llGetSubString(vCI,0,4)=="ping");integer $_1=(llGetSubString(vCI,0,8)=="PROPRELAY");if(($_0||$_1)&&(llGetOwnerKey(vCP)==llGetOwner())){if($_0){llRegionSay(vAJ,"pong|"+(string)vAQ+"|"+(string)llGetPos());return;}if($_1){list vCL=llParseString2List(vCI,["|"],[]);llMessageLinked(LINK_SET,llList2Integer(vCL,1),llList2String(vCL,2),llList2Key(vCL,3));return;}list vCM=llParseString2List(vCI,["|"],[]);vector vCN=llList2Vector(vCM,0)-llGetPos();vCN/=llGetRot();rotation vCO=llList2Rot(vCM,1)/llGetRot();string $_="\nPROP|"+vCG+"|"+(string)vCN+"|"+(string)(llRot2Euler(vCO)*RAD_TO_DEG)+"|"+llList2String(vCM,2);llRegionSayTo(llGetOwner(),0,$_);llMessageLinked(LINK_SET,34333,$_,NULL_KEY);}}dataserver(key vCP,string vCQ){if(vCP==vAH){if(!(EOF==vCQ)){ProcessLine(vCQ,vAI);vAZ++;vAH=llGetNotecardLine(vAK,vAZ);return;}if(vAA<vAE){integer vCR;vCR=0;while((vCR<vAA)&&(llList2String(vAB,vCR*8+4)!="")){++vCR;}vCR=vCR*((vCR!=vAA)-(vCR==vAA))-!vAA;integer vCS=vAA;while(vCS<=vAE){key vCT=llList2Key(vAB,4+8*(vCS));if(vCT){if(!(vCR<0)){if(vAR((key)vCT)){llMessageLinked(LINK_SET,-222,vCT,NULL_KEY);}}else{vAB=llListReplaceList(vAB,[llList2Key(vAB,vCS*8+4)],vCR*8+4,vCR*8+4);vCR=0;while((vCR<vAA)&&(llList2String(vAB,vCR*8+4)!="")){++vCR;}vCR=vCR*((vCR!=vAA)-(vCR==vAA))-!vAA;}}++vCS;}vAB=llDeleteSubList(vAB,vAA*8,-1);vAE=vAA;}llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);if(vAF){vAO=[];llMessageLinked(LINK_SET,2,"RezAdjuster","");}return;}if((vCP==vAM)&&(vCQ!=EOF)){ProcessLine(vCQ,vAI);vAL++;vAM=llGetNotecardLine(vAN,vAL);}}changed(integer vCU){if(vCU&CHANGED_LINK){llMessageLinked(LINK_SET,1,(string)vAJ,NULL_KEY);vAD=vAC;vAC=llGetNumberOfPrims();key vCV=llGetLinkKey(llGetNumberOfPrims());if((vAC<vAD)||!(ZERO_VECTOR!=llGetAgentSize(vCV))){integer vCY=llGetListLength(vAB)/8;while(vCY){--vCY;if(!vAR(llList2Key(vAB,4+8*(vCY)))){vAB=llListReplaceList(vAB,[""],vCY*8+4,vCY*8+4);}}vAD=vAC;llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);return;}if(vAC>vAD){if((!~llListFindList(vAB,[vCV]))){integer vCX=llGetObjectPrimCount(llGetKey());integer vCY=1;while(vCY<=vCX){integer vCZ=(integer)llGetLinkName(vCY);if((vCZ>0)&&(vCZ<=vAA)){if(llAvatarOnLinkSitTarget(vCY)==vCV){if(llList2Key(vAB,4+8*(vCZ-1))==""){vAB=llListReplaceList(vAB,[vCV],(vCZ-1)*8+4,(vCZ-1)*8+4);}}}++vCY;}}if((!~llListFindList(vAB,[vCV]))){integer vDA;vDA=0;while((vDA<vAA)&&(llList2String(vAB,vDA*8+4)!="")){++vDA;}vDA=vDA*((vDA!=vAA)-(vDA==vAA))-!vAA;if(vDA>=0){vAB=llListReplaceList(vAB,[vCV],vDA*8+4,vDA*8+4);}else{if(vAR(vCV)){llMessageLinked(LINK_SET,-222,(string)vCV,NULL_KEY);}}}llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);}}if(vCU&CHANGED_INVENTORY){llResetScript();}if(vCU&CHANGED_REGION){llMessageLinked(LINK_SET,35353,llDumpList2String(vAB,"^"),NULL_KEY);}}on_rez(integer vDB){llResetScript();}}
