// =repo-npose/core.o
// compiled Mon Jan 27 11:06:00 2014 UTC
string vAA="npose admin hud";integer vAB=8;integer vAC=0;integer vAD=34333;integer vAE=34334;list vAF;integer vAG=0;integer vAH=0;integer vAI=12;integer vAJ=35353;integer vAK;integer vAL;integer vCN;string vAN="DEFAULT:";key vAO;key vAP;integer vAQ;string vAR="SET:";key vAS;string vAT;integer vAU;key vAV;string vAW;integer vAX=206;integer vCB;integer vAZ;integer vBA;list vBB;integer vBC=210;integer vBD=202;integer vBE=205;key vBF;integer vBG=204;integer vBH=200;integer vBI=207;integer vBJ=300;integer vBK=208;integer vBL=201;integer vBM=0;string vBN(string vDH,string vBP,string vBQ){return llDumpList2String(llParseStringKeepNulls((vDH="")+vDH,[vBP],[]),vBQ);}integer vBR(){for(vAZ=0;vAZ<vAC;++vAZ){if(llList2String(vAF,vAZ*vAB+4)==""){return vAZ;}}return-1;}list vBS(){list vBT=[];integer vBU=llGetNumberOfPrims();for(vAZ=vBU;vAZ>=0;vAZ--){key vDZ=llGetLinkKey(vAZ);if(llGetAgentSize(vDZ)!=ZERO_VECTOR){vBT=[vDZ]+vBT;}}return vBT;}assignSlots(){list vBW=vBS();vBA=llGetListLength(vBW);if(vAC<vAI){for(vCB=vAC;vCB<=vAI;++vCB){if(llList2Key(vAF,vCB*vAB+4)!=""){integer vBX=vBR();if((vBX>=0)&&(vBX<vAC)){vAF=llListReplaceList(vAF,[llList2Key(vAF,vCB*vAB+4)],vBX*vAB+4,vBX*vAB+4);}}}vAF=llDeleteSubList(vAF,(vAC)*vAB,-1);for(vAZ=0;vAZ<vBA;++vAZ){if(llListFindList(vAF,[llList2Key(vBW,vAZ)])<0){llMessageLinked(LINK_SET,-222,llList2String(vBW,vAZ),NULL_KEY);}}}if(vAG>vAH){key vBY=llList2Key(vBW,vBA-1);integer vBZ=llGetObjectPrimCount(llGetKey());integer vDN=-1;for(vAZ=1;vAZ<=vBZ;++vAZ){integer vCB=(integer)llGetSubString(llGetLinkName(vAZ),4,-1);if((vCB>0)&&(vCB<=vAC)){if(llAvatarOnLinkSitTarget(vAZ)==vBY){if(llList2String(vAF,(vCB-1)*vAB+4)==""){vDN=(integer)llGetLinkName(vAZ);}}}}integer vCC;for(vCC=1;vCC<=vBZ;++vCC){if(vDN!=-1&&llListFindList(vAF,[vBY])==-1){if(vDN<=vAC){vAF=llListReplaceList(vAF,[vBY],(vDN-1)*vAB+4,(vDN-1)*vAB+4);}else{integer vCE=vBR();if(vCE!=-1){vAF=llListReplaceList(vAF,[vBY],(vCE)*vAB+4,(vCE)*vAB+4);}else if(llListFindList(vBS(),[vBY])!=-1){llMessageLinked(LINK_SET,-222,(string)vBY,NULL_KEY);}}}if(llListFindList(vAF,[vBY])==-1){integer vCE=vBR();if(vCE!=-1){vAF=llListReplaceList(vAF,[vBY],(vCE)*vAB+4,(vCE)*vAB+4);}else if(llListFindList(vBS(),[vBY])!=-1){llMessageLinked(LINK_SET,-222,(string)vBY,NULL_KEY);}}}}else if(vAG<vAH){for(vCB=0;vCB<vAC;++vCB){if(llListFindList(vBW,[llList2Key(vAF,vCB*vAB+4)])<0){vAF=llListReplaceList(vAF,[""],vCB*vAB+4,vCB*vAB+4);}}}vAH=vAG;vAI=vAC;llMessageLinked(LINK_SET,vAJ,llDumpList2String(vAF,"^"),NULL_KEY);}SwapTwoSlots(integer vCF,integer vCG){if(vCG<=vAC){integer vCH=llListFindList(vAF,["seat"+(string)vCF])/vAB;integer vCI=llListFindList(vAF,["seat"+(string)vCG])/vAB;list vCJ=llList2List(vAF,vCI*vAB,vCI*vAB+3)+[llList2Key(vAF,vCH*vAB+4)]+llList2List(vAF,vCI*vAB+5,vCI*vAB+7);vAF=llListReplaceList(vAF,llList2List(vAF,vCH*vAB,vCH*vAB+3)+[llList2Key(vAF,vCI*vAB+4)]+llList2List(vAF,vCH*vAB+5,vCH*vAB+7),vCH*vAB,(vCH+1)*vAB-1);vAF=llListReplaceList(vAF,vCJ,vCI*vAB,(vCI+1)*vAB-1);}else{llRegionSayTo(llList2Key(vAF,llListFindList(vAF,["seat"+(string)vCF])-4),0,"Seat "+(string)vCG+" is not available for this pose set");}llMessageLinked(LINK_SET,vAJ,llDumpList2String(vAF,"^"),NULL_KEY);}SwapAvatarInto(key vCK,string vCL){integer vCM=(integer)llGetSubString(llList2String(vAF,llListFindList(vAF,[vCK])+3),4,-1);if(vCM<=0){llWhisper(0,"avatar is not assigned a slot: "+(string)vCK);}else{SwapTwoSlots(vCM,(integer)vCL);}}ReadCard(){vAI=vAC;vAC=0;llRegionSay(vAQ,"die");llRegionSay(vAQ,"adjuster_die");vBB=[];vCN=0;vAS=llGetInventoryKey(vAT);if(vAS){vAO=llGetNotecardLine(vAT,vCN);}}ProcessLine(string vCN,key vCO){vCN=llStringTrim(vCN,STRING_TRIM);list vDW=llParseString2List(vCN,["|"],[]);string vCQ=llList2String(vDW,0);if("ANIM"==vCQ){if(vAC<vAI){vAF=llListReplaceList(vAF,[llList2String(vDW,1),(vector)llList2String(vDW,2),llEuler2Rot((vector)llList2String(vDW,3)*DEG_TO_RAD),llList2String(vDW,4),llList2Key(vAF,(vAC)*vAB+4),"","","seat"+(string)(vAC+1)],(vAC)*vAB,(vAC)*vAB+7);}else{vAF+=[llList2String(vDW,1),(vector)llList2String(vDW,2),llEuler2Rot((vector)llList2String(vDW,3)*DEG_TO_RAD),llList2String(vDW,4),"","","","seat"+(string)(vAC+1)];}vAC++;return;}if("SINGLE"==vCQ){integer vCR=llListFindList(vAF,[(vector)llList2String(vDW,2)]);if((vCR==-1)||((vCR!=-1)&&llList2String(vAF,vCR-1)!=llList2String(vDW,1))){integer vCS=llListFindList(vAF,[vAP])-4;vAF=llListReplaceList(vAF,[llList2String(vDW,1),(vector)llList2String(vDW,2),llEuler2Rot((vector)llList2String(vDW,3)*DEG_TO_RAD),llList2String(vDW,4),llList2Key(vAF,vCS+4),"","",llList2String(vAF,vCS+7)],vCS,vCS+7);}vAC=llGetListLength(vAF)/vAB;vAI=vAC;return;}if("PROP"==vCQ){string vCT=llList2String(vDW,1);if(llGetInventoryType(vCT)==INVENTORY_OBJECT){list vCU=llParseString2List(llList2String(vDW,2),["="],[]);if(llList2String(vCU,1)=="die"){llRegionSay(vAQ,llList2String(vCU,0)+"=die");}else{if(llList2String(vDW,4)=="explicit"){vBM=1;}else{vBM=0;}vector vCV=(vector)llList2String(vDW,2);vector vCW=llGetPos()+(vCV*llGetRot());rotation vCX=llEuler2Rot((vector)llList2String(vDW,3)*DEG_TO_RAD)*llGetRot();if(llVecMag(vCV)>9.9){llRezAtRoot(vCT,llGetPos(),ZERO_VECTOR,vCX,vAQ);llSleep(1.0);llRegionSay(vAQ,llDumpList2String(["MOVEPROP",vCT,(string)vCW],"|"));}else{llRezAtRoot(vCT,llGetPos()+((vector)llList2String(vDW,2)*llGetRot()),ZERO_VECTOR,vCX,vAQ);}}}return;}if("LINKMSG"==vCQ){integer vDG=(integer)llList2String(vDW,1);string vCZ=vBN(vCN,"%AVKEY%",vCO);list vDA=llParseString2List(vCZ,["|"],[]);key vDB;if((key)llList2String(vDA,3)!=""){vDB=(key)llList2String(vDA,3);}else{vDB=(key)llList2String(vAF,(vAC-1)*vAB+4);}string vDH=llList2String(vDA,2);llMessageLinked(LINK_SET,vDG,vDH,vDB);llSleep(1.0);llRegionSay(vAQ,llDumpList2String(["LINKMSGQUE",vDG,vDH,vDB],"|"));return;}if("SATMSG"==vCQ){integer vDE=(vAC-1)*vAB+5;vAF=llListReplaceList(vAF,[llDumpList2String([llList2String(vAF,vDE),llDumpList2String(llDeleteSubList(vDW,0,0),"|")],"§")],vDE,vDE);return;}if("NOTSATMSG"==vCQ){integer vDE=(vAC-1)*vAB+6;vAF=llListReplaceList(vAF,[llDumpList2String([llList2String(vAF,vDE),llDumpList2String(llDeleteSubList(vDW,0,0),"|")],"§")],vDE,vDE);}}default{state_entry(){vAG=llGetNumberOfPrims();for(vAZ=0;vAZ<=vAG;++vAZ){llLinkSitTarget(vAZ,<0.0,0.0,0.5>,ZERO_ROTATION);}vAQ=(integer)("0x"+llGetSubString((string)llGetKey(),0,7));llMessageLinked(LINK_SET,1,(string)vAQ,NULL_KEY);vAG=llGetNumberOfPrims();vAH=vAG;vAL=llListen(vAQ,"","","");vBA=llGetInventoryNumber(INVENTORY_NOTECARD);for(vAZ=0;vAZ<vBA;vAZ++){vAT=llGetInventoryName(INVENTORY_NOTECARD,vAZ);if((llSubStringIndex(vAT,vAN)==0)||(llSubStringIndex(vAT,vAR)==0)){llMessageLinked(LINK_SET,vBH,vAT,NULL_KEY);return;}else{vAT="";}}}link_message(integer vDF,integer vDG,string vDH,key vDZ){if(vDG==999999){llResetScript();}if(vDG==vBH){vAT=vDH;vAP=vDZ;ReadCard();return;}if(vDG==vBI){vAW=vDH;vAP=vDZ;vAU=0;vAV=llGetNotecardLine(vAW,vAU);return;}if(vDG==vBL){vBB=[];vAK=TRUE;return;}if(vDG==vBE){vBB=[];vAK=FALSE;return;}if(vDG==vBJ){list vDV=llParseString2List(vDH,["|"],[]);if(vDZ!=NULL_KEY){vDV=llListReplaceList((vDV=[])+vDV,[vDZ],2,2);}llRegionSay(vAQ,llDumpList2String(["LINKMSG",(string)llList2String(vDV,0),llList2String(vDV,1),(string)llList2String(vDV,2)],"|"));return;}if(vDG==vBD){if(llGetListLength(vAF)/vAB>=2){list vDK=llParseString2List(vDH,[","],[]);SwapTwoSlots((integer)llList2String(vDK,0),(integer)llList2String(vDK,1));}return;}if(vDG==vBC){SwapAvatarInto(vDZ,vDH);return;}if(vDG==(vAJ+2000000)){list vDL=llParseStringKeepNulls(vDH,["^"],[]);integer vDM=llGetListLength(vDL)/vAB;integer vDN;for(vDN=0;vDN<vDM;++vDN){vAF=llListReplaceList(vAF,[llList2String(vDL,vDN*vAB),(vector)llList2String(vDL,vDN*vAB+1),(rotation)llList2String(vDL,vDN*vAB+2),llList2String(vDL,vDN*vAB+3),(key)llList2String(vDL,vDN*vAB+4),llList2String(vDL,vDN*vAB+5),llList2String(vDL,vDN*vAB+6),llList2String(vDL,vDN*vAB+7)],vDN*vAB,vDN*vAB+7);}return;}if(vDG==-999&&vDH=="RezHud"){if(llGetInventoryType(vAA)!=INVENTORY_NONE){llRezObject(vAA,llGetPos()+<0,0,1>,ZERO_VECTOR,llGetRot(),vAQ);}return;}if(vDG==-999&&vDH=="RemoveHud"){llRegionSayTo(vBF,vAQ,"/die");return;}if(vDG==vAE){llSay(0,"Memory Used by "+llGetScriptName()+": "+(string)llGetUsedMemory()+" of "+(string)llGetMemoryLimit()+", Leaving "+(string)llGetFreeMemory()+" memory free.");return;}}object_rez(key vDZ){if(llKey2Name(vDZ)=="Adjuster"){vBB+=[vDZ];return;}if(llKey2Name(vDZ)==vAA){vBF=vDZ;llSleep(2.0);llRegionSayTo(vBF,vAQ,"parent|"+(string)llGetKey());}}listen(integer vDP,string vDQ,key vDZ,string vDS){list vDT=llParseString2List(vDS,["|"],[]);if(vDQ=="Adjuster"){llMessageLinked(LINK_SET,3,vDS,vDZ);return;}if(!(llGetListLength(vDT)<2)){if(vDQ==llKey2Name(vBF)){list vDU=["adjust",vBL,"stopadjust",vBE,"posdump",vBG,"hudsync",vAX];integer $_=llListFindList(vDU,[vDS]);if(~$_){llMessageLinked(LINK_SET,llList2Integer(vDU,$_+1),"","");}}return;}integer $_0=(llGetSubString(vDS,0,4)=="ping");integer $_1=(llGetSubString(vDS,0,8)=="PROPRELAY");if(($_0||$_1)&&(llGetOwnerKey(vDZ)==llGetOwner())){if($_0){llRegionSay(vAQ,"pong|"+(string)vBM+"|"+(string)llGetPos());return;}if($_1){list vDV=llParseString2List(vDS,["|"],[]);llMessageLinked(LINK_SET,llList2Integer(vDV,1),llList2String(vDV,2),llList2Key(vDV,3));return;}list vDW=llParseString2List(vDS,["|"],[]);vector vDX=(vector)llList2String(vDW,0)-llGetPos();vDX/=llGetRot();rotation vDY=llList2Rot(vDW,1)/llGetRot();string $_=llDumpList2String(["\nPROP",vDQ,"|",vDX,llRot2Euler(vDY)*RAD_TO_DEG,llList2String(vDW,2)],"|");llRegionSayTo(llGetOwner(),0,$_);llMessageLinked(LINK_SET,vAD,$_,NULL_KEY);}}dataserver(key vDZ,string vEA){if(vDZ==vAO){if(vEA==EOF){assignSlots();if(vAK){vBB=[];llMessageLinked(LINK_SET,2,"RezAdjuster","");}}else{ProcessLine(vEA,vAP);vCN++;vAO=llGetNotecardLine(vAT,vCN);}return;}if((vDZ==vAV)&&(vEA!=EOF)){ProcessLine(vEA,vAP);vAU++;vAV=llGetNotecardLine(vAW,vAU);}}changed(integer vEB){if(vEB&CHANGED_LINK){llMessageLinked(LINK_SET,1,(string)vAQ,NULL_KEY);vAH=vAG;vAG=llGetNumberOfPrims();assignSlots();}if(vEB&CHANGED_INVENTORY){if(""==vAT){llResetScript();}if(llGetInventoryType(vAT)==INVENTORY_NOTECARD){if(vAS!=llGetInventoryKey(vAT)){ReadCard();}}else{llResetScript();}}if(vEB&CHANGED_REGION){llMessageLinked(LINK_SET,vAJ,llDumpList2String(vAF,"^"),NULL_KEY);}}on_rez(integer vEC){llResetScript();}}
