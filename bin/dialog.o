// The nPose scripts are licensed under the GPLv2
// (http://www.gnu.org/licenses/gpl-2.0.txt), with the following
// addendum:
//
// The nPose scripts are free to be copied, modified, and
// redistributed, subject to the following conditions:
//
//    - If you distribute the nPose scripts, you must leave them full
//      perms.
//
//    - If you modify the nPose scripts and distribute the
//      modifications, you must also make your modifications full
//      perms.
//
// "Full perms" means having the modify, copy, and transfer
// permissions enabled in Second Life and/or other virtual world
// platforms derived from Second Life (such as OpenSim).  If the
// platform should allow more fine-grained permissions, then "full
// perms" will mean the most permissive possible set of permissions
// allowed by the platform.
// =repo-npose/dialog.o
// compiled Sat Feb  1 05:51:49 2014 UTC
integer vAA=-900;integer vAB=-901;integer vAC=-902;integer vAD=12;integer vAE=34334;string vAF="More";string vAG=" ";integer vAH=60;integer vAI=5;list vAJ;integer vAK=9;list vAN;list vAM(){list vAN;integer vAO=llGetNumberOfPrims();integer vCC;for(vCC=vAO;vCC>=0;vCC--){key vCV=llGetLinkKey(vCC);if(llGetAgentSize(vCV)!=ZERO_VECTOR){vAN=[vCV]+vAN;}else{return vAN;}}return[];}integer vAR(){integer vBW=llRound(llFrand(10000000.0))+100000;if(~llListFindList(vAJ,[vBW])){vBW=vAR();}return vBW;}Dialog(key vAT,string vCZ,list vAV,list vBT,integer vDC,key vCV){string vAZ=vCZ+"(Timeout in 60 seconds.)\n";list vBA;list vBB;integer vBC=llGetListLength(vAV+vBT);integer vBD;integer vBE;if(llList2CSV(vBT)!=""){vBE=vAD-llGetListLength(vBT);}else{vBE=vAD;}if(vBC>vAD){vBE--;vBD=vDC*vBE;integer vBF=vBD+vBE-1;vBB=llList2List(vAV,vBD,vBF);}else{vBD=0;vBB=vAV;}integer vBG=llGetListLength(vBB);integer vCC;for(vCC=0;vCC<vBG;vCC++){string vCU=llList2String(vAV,vBD+vCC);vBA+=[vCU];}vBA=vBM(vBA);vBT=vBM(vBT);integer vCT=vAR();integer vCA=llListen(vCT,"",vAT,"");llSetTimerEvent(vAI);if(vBC>vAD){llDialog(vAT,vAZ,vBR(vBA,vBT+[vAF]),vCT);}else{llDialog(vAT,vAZ,vBR(vBA,vBT),vCT);}integer vBL=-1;if(llListFindList(vAN,[vAT])==-1){vBL=llGetUnixTime();}vAJ+=[vCT,vCV,vCA,vBL,vAT,vCZ,llDumpList2String(vAV,"|"),llDumpList2String(vBT,"|"),vDC];}list vBM(list vBN){integer vCB=llGetListLength(vBN);integer vCC;for(vCC=vCB-1;vCC>=0;vCC--){integer vBQ=llGetListEntryType(vBN,vCC);if(llList2String(vBN,vCC)==""){vBN=llDeleteSubList(vBN,vCC,vCC);}else if(vBQ!=TYPE_STRING){vBN=llListReplaceList(vBN,[llList2String(vBN,vCC)],vCC,vCC);}}return vBN;}list vBR(list vBS,list vBT){list vBU;list vBV=vBS+vBT;while(llGetListLength(vBV)% 3!=0&&llGetListLength(vBV)<12){vBU+=[vAG];vBV=vBS+vBU+vBT;}list vBW=llList2List(vBV,9,11);vBW+=llList2List(vBV,6,8);vBW+=llList2List(vBV,3,5);vBW+=llList2List(vBV,0,2);return vBW;}list vBX(list vBY,integer vBZ){integer vCA=llList2Integer(vBY,vBZ+2);llListenRemove(vCA);return llDeleteSubList(vBY,vBZ,vBZ+vAK-1);}CleanList(){integer vCB=llGetListLength(vAJ);integer vCC;for(vCC=vCB-vAK;vCC>=0;vCC-=vAK){integer vCD=llList2Integer(vAJ,vCC+3);if(vCD==-1){key vCE=(key)llList2String(vAJ,vCC+4);if(llListFindList(vAN,[vCE])==-1){vAJ=vBX(vAJ,vCC);}}else{integer vCF=llGetUnixTime()-vCD;if(vCF>vAH){key vCV=llList2Key(vAJ,vCC+1);llMessageLinked(LINK_SET,vAC,"",vCV);vAJ=vBX(vAJ,vCC);}}}}default{on_rez(integer vCH){llResetScript();}state_entry(){vAN=vAM();}changed(integer vCI){if(vCI&CHANGED_LINK){vAN=vAM();}}link_message(integer vCJ,integer vCK,string vCL,key vCV){if(vCK==vAE){llSay(0,"Memory Used by "+llGetScriptName()+": "+(string)llGetUsedMemory()+" of "+(string)llGetMemoryLimit()+", Leaving "+(string)llGetFreeMemory()+" memory free.");}else if(vCK==vAA){list vCN=llParseStringKeepNulls(vCL,["|"],[]);key vCO=(key)llList2String(vCN,0);string vCZ=llList2String(vCN,1);integer vDC=(integer)llList2String(vCN,2);list vCR=llParseStringKeepNulls(llList2String(vCN,3),["`"],[]);list vDB=llParseStringKeepNulls(llList2String(vCN,4),["`"],[]);Dialog(vCO,vCZ,vCR,vDB,vDC,vCV);}}listen(integer vCT,string vCU,key vCV,string vCW){integer vCX=llListFindList(vAJ,[vCT]);if(~vCX){key vCY=llList2Key(vAJ,vCX+1);string vCZ=llList2String(vAJ,vCX+5);list vDA=llParseStringKeepNulls(llList2String(vAJ,vCX+6),["|"],[]);list vDB=llParseStringKeepNulls(llList2String(vAJ,vCX+7),["|"],[]);integer vDC=llList2Integer(vAJ,vCX+8);vAJ=vBX(vAJ,vCX);if(vCW==vAF){vDC++;integer vDD=vAD-llGetListLength(vDB)-1;if(vDC*vDD>llGetListLength(vDA)){vDC=0;}Dialog(vCV,vCZ,vDA,vDB,vDC,vCY);}else if(vCW==vAG){Dialog(vCV,vCZ,vDA,vDB,vDC,vCY);}else{llMessageLinked(LINK_SET,vAB,(string)vDC+"|"+vCW,vCY);}}}timer(){CleanList();if(!llGetListLength(vAJ)){llSetTimerEvent(0.0);}}}
